<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${target_package}.dao.FatalDangerSourceMapper">
  <resultMap id="BaseResultMap" type="${target_package}.model.FatalDangerSource">
    <id column="src_id" jdbcType="INTEGER" property="srcId" />
    <result column="enter_id" jdbcType="INTEGER" property="enterId" />
    <result column="src_name" jdbcType="VARCHAR" property="srcName" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="critical_num" jdbcType="INTEGER" property="criticalNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    src_id, enter_id, src_name, stock_num, critical_num
  </sql>
  <select id="selectByExample" parameterType="${target_package}.model.FatalDangerSourceCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fatal_danger_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fatal_danger_source
    where src_id = #{srcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fatal_danger_source
    where src_id = #{srcId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="${target_package}.model.FatalDangerSourceCriteria">
    delete from fatal_danger_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${target_package}.model.FatalDangerSource">
    insert into fatal_danger_source (src_id, enter_id, src_name, 
      stock_num, critical_num)
    values (#{srcId,jdbcType=INTEGER}, #{enterId,jdbcType=INTEGER}, #{srcName,jdbcType=VARCHAR}, 
      #{stockNum,jdbcType=INTEGER}, #{criticalNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="${target_package}.model.FatalDangerSource">
    insert into fatal_danger_source
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="srcId != null">
        src_id,
      </if>
      <if test="enterId != null">
        enter_id,
      </if>
      <if test="srcName != null">
        src_name,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="criticalNum != null">
        critical_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="srcId != null">
        #{srcId,jdbcType=INTEGER},
      </if>
      <if test="enterId != null">
        #{enterId,jdbcType=INTEGER},
      </if>
      <if test="srcName != null">
        #{srcName,jdbcType=VARCHAR},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="criticalNum != null">
        #{criticalNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="${target_package}.model.FatalDangerSourceCriteria" resultType="java.lang.Long">
    select count(*) from fatal_danger_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fatal_danger_source
    <set>
      <if test="record.srcId != null">
        src_id = #{record.srcId,jdbcType=INTEGER},
      </if>
      <if test="record.enterId != null">
        enter_id = #{record.enterId,jdbcType=INTEGER},
      </if>
      <if test="record.srcName != null">
        src_name = #{record.srcName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.criticalNum != null">
        critical_num = #{record.criticalNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fatal_danger_source
    set src_id = #{record.srcId,jdbcType=INTEGER},
      enter_id = #{record.enterId,jdbcType=INTEGER},
      src_name = #{record.srcName,jdbcType=VARCHAR},
      stock_num = #{record.stockNum,jdbcType=INTEGER},
      critical_num = #{record.criticalNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${target_package}.model.FatalDangerSource">
    update fatal_danger_source
    <set>
      <if test="enterId != null">
        enter_id = #{enterId,jdbcType=INTEGER},
      </if>
      <if test="srcName != null">
        src_name = #{srcName,jdbcType=VARCHAR},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="criticalNum != null">
        critical_num = #{criticalNum,jdbcType=INTEGER},
      </if>
    </set>
    where src_id = #{srcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="${target_package}.model.FatalDangerSource">
    update fatal_danger_source
    set enter_id = #{enterId,jdbcType=INTEGER},
      src_name = #{srcName,jdbcType=VARCHAR},
      stock_num = #{stockNum,jdbcType=INTEGER},
      critical_num = #{criticalNum,jdbcType=INTEGER}
    where src_id = #{srcId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="${target_package}.model.FatalDangerSource">
    <id column="src_id" jdbcType="INTEGER" property="srcId" />
    <result column="enter_id" jdbcType="INTEGER" property="enterId" />
    <result column="src_name" jdbcType="VARCHAR" property="srcName" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="critical_num" jdbcType="INTEGER" property="criticalNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    src_id, enter_id, src_name, stock_num, critical_num
  </sql>
  <select id="selectByExample" parameterType="${target_package}.model.FatalDangerSourceCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fatal_danger_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fatal_danger_source
    where src_id = #{srcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fatal_danger_source
    where src_id = #{srcId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="${target_package}.model.FatalDangerSourceCriteria">
    delete from fatal_danger_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${target_package}.model.FatalDangerSource">
    insert into fatal_danger_source (src_id, enter_id, src_name, 
      stock_num, critical_num)
    values (#{srcId,jdbcType=INTEGER}, #{enterId,jdbcType=INTEGER}, #{srcName,jdbcType=VARCHAR}, 
      #{stockNum,jdbcType=INTEGER}, #{criticalNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="${target_package}.model.FatalDangerSource">
    insert into fatal_danger_source
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="srcId != null">
        src_id,
      </if>
      <if test="enterId != null">
        enter_id,
      </if>
      <if test="srcName != null">
        src_name,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="criticalNum != null">
        critical_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="srcId != null">
        #{srcId,jdbcType=INTEGER},
      </if>
      <if test="enterId != null">
        #{enterId,jdbcType=INTEGER},
      </if>
      <if test="srcName != null">
        #{srcName,jdbcType=VARCHAR},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="criticalNum != null">
        #{criticalNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="${target_package}.model.FatalDangerSourceCriteria" resultType="java.lang.Long">
    select count(*) from fatal_danger_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fatal_danger_source
    <set>
      <if test="record.srcId != null">
        src_id = #{record.srcId,jdbcType=INTEGER},
      </if>
      <if test="record.enterId != null">
        enter_id = #{record.enterId,jdbcType=INTEGER},
      </if>
      <if test="record.srcName != null">
        src_name = #{record.srcName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.criticalNum != null">
        critical_num = #{record.criticalNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fatal_danger_source
    set src_id = #{record.srcId,jdbcType=INTEGER},
      enter_id = #{record.enterId,jdbcType=INTEGER},
      src_name = #{record.srcName,jdbcType=VARCHAR},
      stock_num = #{record.stockNum,jdbcType=INTEGER},
      critical_num = #{record.criticalNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${target_package}.model.FatalDangerSource">
    update fatal_danger_source
    <set>
      <if test="enterId != null">
        enter_id = #{enterId,jdbcType=INTEGER},
      </if>
      <if test="srcName != null">
        src_name = #{srcName,jdbcType=VARCHAR},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="criticalNum != null">
        critical_num = #{criticalNum,jdbcType=INTEGER},
      </if>
    </set>
    where src_id = #{srcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="${target_package}.model.FatalDangerSource">
    update fatal_danger_source
    set enter_id = #{enterId,jdbcType=INTEGER},
      src_name = #{srcName,jdbcType=VARCHAR},
      stock_num = #{stockNum,jdbcType=INTEGER},
      critical_num = #{criticalNum,jdbcType=INTEGER}
    where src_id = #{srcId,jdbcType=INTEGER}
  </update>
</mapper>